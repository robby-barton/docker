services:
  pihole:
    container_name: pihole
    image: cbcrowe/pihole-unbound:latest
    hostname: ${HOSTNAME}
    domainname: ${DOMAIN_NAME}
    restart: unless-stopped
    depends_on:
      - dhcphelper
    cap_add:
      - NET_ADMIN
    networks:
      backend:
        ipv4_address: '172.31.0.100'
    ports:
      - 443:443/tcp
      - 53:53/tcp
      - 53:53/udp
      - ${PIHOLE_WEBPORT:-80}:80/tcp
      # - 5335:5335/tcp # Uncomment to enable unbound access on local server
      # - 22/tcp # Uncomment to enable SSH 80:80/tcp
    environment:
      - FTLCONF_LOCAL_IPV4=${FTLCONF_LOCAL_IPV4}
      - TZ=${TZ:-America/New_York}
      - WEBPASSWORD=${WEBPASSWORD}
      - WEBTHEME=${WEBTHEME:-default-dark}
      - REV_SERVER=${REV_SERVER:-false}
      - REV_SERVER_TARGET=${REV_SERVER_TARGET}
      - REV_SERVER_DOMAIN=${REV_SERVER_DOMAIN}
      - REV_SERVER_CIDR=${REV_SERVER_CIDR}
      - PIHOLE_DNS_=127.0.0.1#5335
      - DNSSEC="true"
      - DNSMASQ_LISTENING=all
    volumes:
      - ${VOLUME_PATH}/pihole/pihole:/etc/pihole:rw
      - ${VOLUME_PATH}/pihole/dnsmasq.d:/etc/dnsmasq.d:rw
      - ${VOLUME_PATH}/pihole/resolv.conf:/etc/resolv.conf

  dhcphelper:
    build: ./config/dhcp-helper
    restart: unless-stopped
    network_mode: "host"
    command: -s 172.31.0.100
    cap_add:
      - NET_ADMIN

  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    network_mode: host
    devices:
      - /dev/dri:/dev/dri
    environment:
      - PUID=13000
      - PGID=13000
      - UMASK=002
      - TZ=${TZ:-America/New_York}
      - VERSION=docker
    volumes:
      - ${VOLUME_PATH}/plex/config:/config
      - ${MEDIA_DIR}/media:/data
    restart: unless-stopped

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=13001
      - PGID=13000
      - UMASK=002
      - TZ=${TZ:-America/New_York}
    volumes:
      - ${VOLUME_PATH}/sonarr:/config
      - ${MEDIA_DIR}:/data
    ports:
      - "8989:8989"
    restart: unless-stopped

  animarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: animarr
    environment:
      - PUID=13007
      - PGID=13000
      - UMASK=002
      - TZ=${TZ:-America/New_York}
    volumes:
      - ${VOLUME_PATH}/animarr:/config
      - ${MEDIA_DIR}:/data
    ports:
      - "9898:8989"
    restart: unless-stopped

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=13002
      - PGID=13000
      - UMASK=002
      - TZ=${TZ:-America/New_York}
    volumes:
      - ${VOLUME_PATH}/radarr:/config
      - ${MEDIA_DIR}:/data
    ports:
      - "7878:7878"
    restart: unless-stopped

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=13003
      - PGID=13000
      - UMASK=002
      - TZ=${TZ:-America/New_York}
    volumes:
      - ${VOLUME_PATH}/bazarr:/config
      - ${MEDIA_DIR}/media/:/data/media
    ports:
      - "6767:6767"
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=13006
      - PGID=13000
      - UMASK=002
      - TZ=${TZ:-America/New_York}
    volumes:
      - ${VOLUME_PATH}/prowlarr:/config
    ports:
      - "9696:9696"
    restart: unless-stopped

  recyclarr:
    image: ghcr.io/recyclarr/recyclarr
    container_name: recyclarr
    volumes:
      - ${VOLUME_PATH}/recyclarr:/config
    environment:
      - PUID=13008
      - PGID=13000
      - UMASK=002
      - TZ=${TZ:-America/New_York}
    restart: unless-stopped

  komga:
    image: ghcr.io/gotson/komga
    container_name: komga
    environment:
      - PUID=13010
      - PGID=13000
      - UMASK=002
      - TZ=${TZ:-America/New_York}
    volumes:
      - ${VOLUME_PATH}/komga:/config
      - ${MEDIA_DIR}/media:/data
    ports:
      - 25600:25600
    restart: unless-stopped

  kavita:
    image: lscr.io/linuxserver/kavita:latest
    container_name: kavita
    environment:
      - PUID=13010
      - PGID=13000
      - UMASK=002
      - TZ=${TZ:-America/New_York}
      - DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=true
    volumes:
      - ${VOLUME_PATH}/kavita:/config
      - ${MEDIA_DIR}/media:/data
    ports:
      - 5000:5000
    restart: unless-stopped

  komf:
    image: sndxr/komf:latest
    container_name: komf
    volumes:
      - ${VOLUME_PATH}/komf:/config
    environment:
      - PUID=13011
      - PGID=13000
      - UMASK=002
      - TZ=${TZ:-America/New_York}
      - KOMF_KOMGA_BASE_URI=http://komga:25600
      - KOMF_KOMGA_USER=${KOMGA_USERNAME}
      - KOMF_KOMGA_PASSWORD=${KOMGA_PASSWORD}
      - KOMF_KAVITA_BASE_URI=http://kavita:5000
      - KOMF_KAVITA_API_KEY=${KAVITA_API_KEY}
      # optional jvm options. Example config for low memory usage. Runs guaranteed cleanup up every 3600000ms(1hour)
      - JAVA_TOOL_OPTIONS=-XX:+UnlockExperimentalVMOptions -XX:+UseShenandoahGC -XX:ShenandoahGCHeuristics=compact -XX:ShenandoahGuaranteedGCInterval=3600000 -XX:TrimNativeHeapInterval=3600000
    ports:
      - "8085:8085"
    restart: unless-stopped

  gluetun:
    image: qmcgaw/gluetun:latest
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 8090:8090 # port for qbittorrent
    volumes:
      - ${VOLUME_PATH}/gluetun:/tmp/gluetun
    environment:
      - VPN_SERVICE_PROVIDER=custom
      - VPN_TYPE=wireguard
      - VPN_PORT_FORWARDING=on
      - VPN_PORT_FORWARDING_PROVIDER=protonvpn
      - VPN_ENDPOINT_IP=${PROTONVPN_ENDPOINT_IP}
      - VPN_ENDPOINT_PORT=${PROTONVPN_ENDPOINT_PORT}
      - VPN_DNS_ADDRESSES=${PROTONVPN_DNS_ADDRESSES}
      - WIREGUARD_PRIVATE_KEY=${PROTONVPN_PRIVATE_KEY}
      - WIREGUARD_PUBLIC_KEY=${PROTONVPN_PUBLIC_KEY}
      - WIREGUARD_ADDRESSES=${PROTONVPN_ADDRESSES}
      - FIREWALL_OUTBOUND_SUBNETS=${PROTONVPN_OUTBOUND_SUBNETS}
      - HTTPPROXY=off #change to on if you wish to enable
      - SHADOWSOCKS=off #change to on if you wish to enable
    restart: unless-stopped

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=13005
      - PGID=13000
      - UMASK=002
      - TZ=${TZ:-America/New_York}
      - WEBUI_PORT=8090
    volumes:
      - ${VOLUME_PATH}/qbittorrent:/config
      - ${MEDIA_DIR}/torrents:/data/torrents
    network_mode: service:gluetun # run on the vpn network
    restart: unless-stopped

  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    environment:
      - PUID=13004
      - PGID=13000
      - UMASK=002
      - TZ=${TZ:-America/New_York}
    volumes:
      - ${VOLUME_PATH}/sabnzbd:/config
      - ${MEDIA_DIR}/usenet:/data/usenet
    ports:
      - 8080:8080
    restart: unless-stopped

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=${TZ:-America/New_York}
    ports:
      - 8191:8191
    restart: unless-stopped

  overseerr:
    image: sctx/overseerr:latest
    container_name: overseerr
    environment:
      - LOG_LEVEL=debug
      - TZ=${TZ:-America/New_York}
    ports:
      - 5055:5055
    volumes:
      - ${VOLUME_PATH}/overseerr:/app/config
    restart: unless-stopped

networks:
  backend:
    ipam:
      config:
        - subnet: 172.31.0.0/16
